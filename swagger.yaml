---
swagger: "2.0"
info:
  description: "This is a project able to supply the mechanisms required for generating unique identifiers in 5GZORRO ecosystem, recognising communicating endpoints,\ 
    \ identifying and authenticating entities, services, and organizations, and authorising consumer requests to access a preserved services and resources."
  version: "0.1.0"
  title: "Identity & Permissions Manager"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
#host: "petstore.swagger.io"
#basePath: "/v2"
tags:
- name: "did"
  description: "Operations regarding DIDs."
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
- name: "did_document"
  description: "Operations regarding DID Documents."
- name: "credential"
  description: "Operations regarding Verifiable Credentials."
- name: "proof_request"
  description: "Operations regarding Proof Requests."
  #externalDocs:
  #  description: "Find out more about our store"
  #  url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /dids/create:
    post:
      tags:
      - "did"
      summary: "Create an DID"
      description: ""
      operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      #- name: "petId"
      #  in: "path"
      #  description: "ID of pet to update"
      #  required: true
      #  type: "integer"
      #  format: "int64"
      #- name: "additionalMetadata"
      #  in: "formData"
      #  description: "Additional data to pass to server"
      #  required: false
      #  type: "string"
      #- name: "file"
      #  in: "formData"
      #  description: "file to upload"
      #  required: false
      #  type: "file"
      - name: "did"
      #  in: "path"
        description: "DID"
        required: true
        type: "string"
      #  format: "int64"
      - name: "verkey"
      #  in: "formData"
        description: "Key associated to DID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
      #security:
      #- petstore_auth:
      #  - "write:pets"
      #  - "read:pets"
  /dids/read:
    get:
      tags:
      - "did"
      summary: "Read DID"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      #produces:
      #- "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /dids/register:
    post:
      tags:
      - "did"
      summary: "Register DID"
      description: ""
      #operationId: "uploadFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - name: "did"
      #  in: "path"
        description: "DID"
        required: true
        type: "string"
      #  format: "int64"
      #- name: "verkey"
      #  in: "formData"
      #  description: "Key associated to DID"
      #  required: true
      #  type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /did_documents/create:
    post:
      tags:
      - "did_document"
      summary: "Create DID Document"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /did_documents/read:
    get:
      tags:
      - "did_document"
      summary: "Read DID Document"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /did_documents/update:
    put:
      tags:
      - "did_document"
      summary: "Update DID Document"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/issue:
    post:
      tags:
      - "credential"
      summary: "Issue Verifiable Credential"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/read:
    get:
      tags:
      - "credential"
      summary: "Read Verifiable Credential"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/read/all:
    get:
      tags:
      - "credential"
      summary: "Read all Verifiable Credentials"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/revoke:
    put:
      tags:
      - "credential"
      summary: "Revoke Verifiable Credential"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/read/revoke:
    get:
      tags:
      - "credential"
      summary: "Read Revoked Verifiable Credential"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /credentials/remove:
    delete:
      tags:
      - "credential"
      summary: "Remove Verifiable Credential"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /proof_requests/create:
    post:
      tags:
      - "proof_request"
      summary: "Create Proof Request"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /proof_requests/read:
    get:
      tags:
      - "proof_request"
      summary: "Read Proof Request"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /proof_requests/read/credential:
    get:
      tags:
      - "proof_request"
      summary: "Read Proof Request"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /proof_requests/present_proof/send:
    post:
      tags:
      - "proof_request"
      summary: "Present a proof to send to the Administrator"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
  /proof_requests/present_proof/verify:
    post:
      tags:
      - "proof_request"
      summary: "Verify Presented Proof from Provider"
      description: ""
      #operationId: "uploadFile"
      #consumes:
      #- "multipart/form-data"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ApiResponse" 
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://petstore.swagger.io/oauth/authorize"
    flow: "implicit"
    scopes:
      read:pets: "read your pets"
      write:pets: "modify pets in your account"
definitions:
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          wrapped: true
        items:
          type: "string"
          xml:
            name: "photoUrl"
      tags:
        type: "array"
        xml:
          wrapped: true
        items:
          xml:
            name: "tag"
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
    xml:
      name: "Order"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
